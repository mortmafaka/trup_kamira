{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1wDRk7gg-VCUL3nK4QNBDd8y89UP4rBY5","timestamp":1693308961541}],"authorship_tag":"ABX9TyO+c1E5oFq3HgrX6J8UQjai"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["В финальном спринте вы отработаете новые навыки в условиях, максимально приближенных к рабочим. За две недели вам нужно решить несколько задач, а поможет в этом специалист команды сопровождения — тимлид. На время он станет вашим коллегой: поставит задачи и проверит, как вы их выполнили.\n","\n","Задачи\n","Вам предстоит построить прототип модели машинного обучения. Его разработка состоит из нескольких этапов:\n","* Составьте план работы. Исходное условие задачи заведомо неполное и содержит лишнюю информацию. Проведите разведывательный анализ данных, чтобы понять, какие вопросы подготовить.\n","* Уточните задачу. Задайте вопросы тимлиду, на вводном вебинаре.\n","* Разработайте модель. Отдайте код на проверку тимлиду.\n","* Подготовьте отчёт. Отправьте отчёт тимлиду, чтобы он проверил успешность выполнения задания.\n","\n","\n","От качества вашей модели зависит успешность прохождения задания. Критериями проверки поделится тимлид, когда уточнит задачу на вводном вебинаре.\n","\n","В следующей теме вы увидите описания двух проектов. Первый посвящён металлургической промышленности, второй — сфере телекоммуникаций. Вам нужно выполнить только один проект. Если вы ещё не знаете, какой из них вам назначен, обратитесь к куратору.\n","\n","Удачи!\n"],"metadata":{"id":"rRL8AeZOqCjT"}},{"cell_type":"markdown","source":["<h1>Описание проекта: промышленность</h1>\n","<p>Чтобы оптимизировать производственные расходы, металлургический комбинат ООО «Так закаляем сталь» решил уменьшить потребление электроэнергии на этапе обработки стали. Вам предстоит построить модель, которая предскажет температуру стали.</p>\n","\n","<h2>Описание этапа обработки</h2>\n","1. Сталь обрабатывают в металлическом ковше вместимостью около 100 тонн. Чтобы ковш выдерживал высокие температуры, изнутри его облицовывают огнеупорным кирпичом. Расплавленную сталь заливают в ковш и подогревают до нужной температуры графитовыми электродами. Они установлены в крышке ковша.\n","2. Из сплава выводится сера (десульфурация), добавлением примесей корректируется химический состав и отбираются пробы. Сталь легируют — изменяют её состав — подавая куски сплава из бункера для сыпучих материалов или проволоку через специальный трайб-аппарат (англ. tribe, «масса»).\n","3. Перед тем как первый раз ввести легирующие добавки, измеряют температуру стали и производят её химический анализ. Потом температуру на несколько минут повышают, добавляют легирующие материалы и продувают сплав инертным газом.\n","4. Затем его перемешивают и снова проводят измерения. Такой цикл повторяется до достижения целевого химического состава и оптимальной температуры плавки.\n","Тогда расплавленная сталь отправляется на доводку металла или поступает в машину непрерывной разливки. Оттуда готовый продукт выходит в виде заготовок-слябов (англ. slab, «плита»).\n","<h2>Описание данных</h2\n",">\n","Данные состоят из файлов, полученных из разных источников:\n","\n","* data_arc_new.csv — данные об электродах;\n","* data_bulk_new.csv — данные о подаче сыпучих материалов (объём);\n","* data_bulk_time_new.csv — данные о подаче сыпучих материалов (время);\n","* data_gas_new.csv — данные о продувке сплава газом;\n","* data_temp_new.csv — результаты измерения температуры;\n","* data_wire_new.csv — данные о проволочных материалах (объём);\n","* data_wire_time_new.csv  — данные о проволочных материалах (время).\n","\n","Во всех файлах столбец key содержит номер партии. В файлах может быть несколько строк с одинаковым значением key: они соответствуют разным итерациям обработки.\n","Данные\n","\n","* https://code.s3.yandex.net/datasets/data_arc_new.csv\n","* https://code.s3.yandex.net/datasets/data_bulk_new.csv\n","* https://code.s3.yandex.net/datasets/data_bulk_time_new.csv\n","* https://code.s3.yandex.net/datasets/data_gas_new.csv\n","* https://code.s3.yandex.net/datasets/data_temp_new.csv\n","* https://code.s3.yandex.net/datasets/data_wire_new.csv\n","* https://code.s3.yandex.net/datasets/data_wire_time_new.csv\n","\n","Данные также находятся в тренажёре, в папке /datasets/."],"metadata":{"id":"ZDLVZ9GPqTVw"}},{"cell_type":"code","source":["!pip install catboost"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BOonf0XCr4Q1","executionInfo":{"status":"ok","timestamp":1693308230110,"user_tz":-300,"elapsed":15344,"user":{"displayName":"Иван","userId":"01650192778822130219"}},"outputId":"ec929431-fd59-4990-a800-4a61dd4cc1af"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting catboost\n","  Downloading catboost-1.2.1-cp310-cp310-manylinux2014_x86_64.whl (98.7 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m98.7/98.7 MB\u001b[0m \u001b[31m9.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: graphviz in /usr/local/lib/python3.10/dist-packages (from catboost) (0.20.1)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (from catboost) (3.7.1)\n","Requirement already satisfied: numpy>=1.16.0 in /usr/local/lib/python3.10/dist-packages (from catboost) (1.23.5)\n","Requirement already satisfied: pandas>=0.24 in /usr/local/lib/python3.10/dist-packages (from catboost) (1.5.3)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.10/dist-packages (from catboost) (1.10.1)\n","Requirement already satisfied: plotly in /usr/local/lib/python3.10/dist-packages (from catboost) (5.15.0)\n","Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from catboost) (1.16.0)\n","Requirement already satisfied: python-dateutil>=2.8.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=0.24->catboost) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=0.24->catboost) (2023.3)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->catboost) (1.1.0)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib->catboost) (0.11.0)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->catboost) (4.42.1)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->catboost) (1.4.4)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->catboost) (23.1)\n","Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->catboost) (9.4.0)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->catboost) (3.1.1)\n","Requirement already satisfied: tenacity>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from plotly->catboost) (8.2.3)\n","Installing collected packages: catboost\n","Successfully installed catboost-1.2.1\n"]}]},{"cell_type":"markdown","source":["Загрузим библиотеки"],"metadata":{"id":"y4ADkcYDsBvs"}},{"cell_type":"code","execution_count":2,"metadata":{"id":"gOUzNb6xp9Uq","executionInfo":{"status":"ok","timestamp":1693308232642,"user_tz":-300,"elapsed":2536,"user":{"displayName":"Иван","userId":"01650192778822130219"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.model_selection import train_test_split\n","from catboost import CatBoostClassifier"]},{"cell_type":"markdown","source":["Загрузим и изучим данные"],"metadata":{"id":"wvmt0ugmsHMZ"}},{"cell_type":"code","source":["data_arc_new = pd.read_csv('https://code.s3.yandex.net/datasets/data_arc_new.csv')\n","data_bulk_new = pd.read_csv('https://code.s3.yandex.net/datasets/data_bulk_new.csv')\n","data_bulk_time_new = pd.read_csv('https://code.s3.yandex.net/datasets/data_bulk_time_new.csv')\n","data_gas_new = pd.read_csv('https://code.s3.yandex.net/datasets/data_gas_new.csv')\n","data_temp_new = pd.read_csv('https://code.s3.yandex.net/datasets/data_temp_new.csv')\n","data_wire_new = pd.read_csv('https://code.s3.yandex.net/datasets/data_wire_new.csv')\n","data_wire_time_new = pd.read_csv('https://code.s3.yandex.net/datasets/data_wire_time_new.csv')"],"metadata":{"id":"6pXx9Gr6rxBH","executionInfo":{"status":"ok","timestamp":1693308243731,"user_tz":-300,"elapsed":7494,"user":{"displayName":"Иван","userId":"01650192778822130219"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["data_arc_new.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"mZO_Co9ytDcY","executionInfo":{"status":"ok","timestamp":1693308243732,"user_tz":-300,"elapsed":10,"user":{"displayName":"Иван","userId":"01650192778822130219"}},"outputId":"7ca047ff-9288-47d2-fede-ce09c199fae8"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   key Начало нагрева дугой  Конец нагрева дугой  Активная мощность  \\\n","0    1  2019-05-03 11:02:14  2019-05-03 11:06:02           0.305130   \n","1    1  2019-05-03 11:07:28  2019-05-03 11:10:33           0.765658   \n","2    1  2019-05-03 11:11:44  2019-05-03 11:14:36           0.580313   \n","3    1  2019-05-03 11:18:14  2019-05-03 11:24:19           0.518496   \n","4    1  2019-05-03 11:26:09  2019-05-03 11:28:37           0.867133   \n","\n","   Реактивная мощность  \n","0             0.211253  \n","1             0.477438  \n","2             0.430460  \n","3             0.379979  \n","4             0.643691  "],"text/html":["\n","  <div id=\"df-af22f36c-bf70-4297-b5bf-2b15c086f846\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>key</th>\n","      <th>Начало нагрева дугой</th>\n","      <th>Конец нагрева дугой</th>\n","      <th>Активная мощность</th>\n","      <th>Реактивная мощность</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>2019-05-03 11:02:14</td>\n","      <td>2019-05-03 11:06:02</td>\n","      <td>0.305130</td>\n","      <td>0.211253</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>2019-05-03 11:07:28</td>\n","      <td>2019-05-03 11:10:33</td>\n","      <td>0.765658</td>\n","      <td>0.477438</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>2019-05-03 11:11:44</td>\n","      <td>2019-05-03 11:14:36</td>\n","      <td>0.580313</td>\n","      <td>0.430460</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>2019-05-03 11:18:14</td>\n","      <td>2019-05-03 11:24:19</td>\n","      <td>0.518496</td>\n","      <td>0.379979</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>2019-05-03 11:26:09</td>\n","      <td>2019-05-03 11:28:37</td>\n","      <td>0.867133</td>\n","      <td>0.643691</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-af22f36c-bf70-4297-b5bf-2b15c086f846')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-af22f36c-bf70-4297-b5bf-2b15c086f846 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-af22f36c-bf70-4297-b5bf-2b15c086f846');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-42176b0e-19cd-40ca-afec-4f03949089fb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-42176b0e-19cd-40ca-afec-4f03949089fb')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-42176b0e-19cd-40ca-afec-4f03949089fb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["data_arc_new.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QgxZIVfztHx7","executionInfo":{"status":"ok","timestamp":1693308246206,"user_tz":-300,"elapsed":5,"user":{"displayName":"Иван","userId":"01650192778822130219"}},"outputId":"18216a77-edc8-4171-b63a-90f2b0f132bb"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 14876 entries, 0 to 14875\n","Data columns (total 5 columns):\n"," #   Column                Non-Null Count  Dtype  \n","---  ------                --------------  -----  \n"," 0   key                   14876 non-null  int64  \n"," 1   Начало нагрева дугой  14876 non-null  object \n"," 2   Конец нагрева дугой   14876 non-null  object \n"," 3   Активная мощность     14876 non-null  float64\n"," 4   Реактивная мощность   14876 non-null  float64\n","dtypes: float64(2), int64(1), object(2)\n","memory usage: 581.2+ KB\n"]}]},{"cell_type":"code","source":["data_arc_new.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"JMnxpARFtJd4","executionInfo":{"status":"ok","timestamp":1693308251676,"user_tz":-300,"elapsed":377,"user":{"displayName":"Иван","userId":"01650192778822130219"}},"outputId":"81c6ec89-0da5-4767-a09f-f439fffeb8e6"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                key  Активная мощность  Реактивная мощность\n","count  14876.000000       14876.000000         14876.000000\n","mean    1615.220422           0.662752             0.438986\n","std      934.571502           0.258885             5.873485\n","min        1.000000           0.223120          -715.479924\n","25%      806.000000           0.467115             0.337175\n","50%     1617.000000           0.599587             0.441639\n","75%     2429.000000           0.830070             0.608201\n","max     3241.000000           1.463773             1.270284"],"text/html":["\n","  <div id=\"df-0ba72660-3b89-4a91-8fae-c1a297ffd94d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>key</th>\n","      <th>Активная мощность</th>\n","      <th>Реактивная мощность</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>14876.000000</td>\n","      <td>14876.000000</td>\n","      <td>14876.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>1615.220422</td>\n","      <td>0.662752</td>\n","      <td>0.438986</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>934.571502</td>\n","      <td>0.258885</td>\n","      <td>5.873485</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>0.223120</td>\n","      <td>-715.479924</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>806.000000</td>\n","      <td>0.467115</td>\n","      <td>0.337175</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>1617.000000</td>\n","      <td>0.599587</td>\n","      <td>0.441639</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>2429.000000</td>\n","      <td>0.830070</td>\n","      <td>0.608201</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>3241.000000</td>\n","      <td>1.463773</td>\n","      <td>1.270284</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0ba72660-3b89-4a91-8fae-c1a297ffd94d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0ba72660-3b89-4a91-8fae-c1a297ffd94d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0ba72660-3b89-4a91-8fae-c1a297ffd94d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-84203c16-4e7c-40e1-8bae-de48a53ac62d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-84203c16-4e7c-40e1-8bae-de48a53ac62d')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-84203c16-4e7c-40e1-8bae-de48a53ac62d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["print('Колличество пропусков в каждом столбце')\n","print(data_arc_new.isna().sum())\n","print(50*'=')\n","print('Колличество дублей')\n","print(data_arc_new.duplicated().sum())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OXRDakgftOFW","executionInfo":{"status":"ok","timestamp":1693308263704,"user_tz":-300,"elapsed":450,"user":{"displayName":"Иван","userId":"01650192778822130219"}},"outputId":"e3d6cb9c-efd3-48d9-ccf7-fe97a5ccd256"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["Колличество пропусков в каждом столбце\n","key                     0\n","Начало нагрева дугой    0\n","Конец нагрева дугой     0\n","Активная мощность       0\n","Реактивная мощность     0\n","dtype: int64\n","==================================================\n","Колличество дублей\n","0\n"]}]},{"cell_type":"markdown","source":["Пропусков и дублей нет, в реактивной мощности есть отрицательные значения, прверим остальные файлы"],"metadata":{"id":"hv0yqykwt4l7"}},{"cell_type":"code","source":["print(data_bulk_new.info())\n","print(50*'=')\n","print(data_bulk_new.head())\n","print(50*'=')\n","print(data_bulk_new.describe())\n","print(50*'=')\n","print('Колличество пропусков в каждом столбце')\n","print(data_bulk_new.isna().sum())\n","print(50*'=')\n","print('Колличество дублей')\n","print(data_bulk_new.duplicated().sum())\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2mBfv4LYtbFE","executionInfo":{"status":"ok","timestamp":1693219232408,"user_tz":-300,"elapsed":446,"user":{"displayName":"Иван","userId":"01650192778822130219"}},"outputId":"88fc4a3c-16c4-47f5-f307-40f00ffb14b5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3129 entries, 0 to 3128\n","Data columns (total 16 columns):\n"," #   Column   Non-Null Count  Dtype  \n","---  ------   --------------  -----  \n"," 0   key      3129 non-null   int64  \n"," 1   Bulk 1   252 non-null    float64\n"," 2   Bulk 2   22 non-null     float64\n"," 3   Bulk 3   1298 non-null   float64\n"," 4   Bulk 4   1014 non-null   float64\n"," 5   Bulk 5   77 non-null     float64\n"," 6   Bulk 6   576 non-null    float64\n"," 7   Bulk 7   25 non-null     float64\n"," 8   Bulk 8   1 non-null      float64\n"," 9   Bulk 9   19 non-null     float64\n"," 10  Bulk 10  176 non-null    float64\n"," 11  Bulk 11  177 non-null    float64\n"," 12  Bulk 12  2450 non-null   float64\n"," 13  Bulk 13  18 non-null     float64\n"," 14  Bulk 14  2806 non-null   float64\n"," 15  Bulk 15  2248 non-null   float64\n","dtypes: float64(15), int64(1)\n","memory usage: 391.2 KB\n","None\n","==================================================\n","   key  Bulk 1  Bulk 2  Bulk 3  Bulk 4  Bulk 5  Bulk 6  Bulk 7  Bulk 8  \\\n","0    1     NaN     NaN     NaN    43.0     NaN     NaN     NaN     NaN   \n","1    2     NaN     NaN     NaN    73.0     NaN     NaN     NaN     NaN   \n","2    3     NaN     NaN     NaN    34.0     NaN     NaN     NaN     NaN   \n","3    4     NaN     NaN     NaN    81.0     NaN     NaN     NaN     NaN   \n","4    5     NaN     NaN     NaN    78.0     NaN     NaN     NaN     NaN   \n","\n","   Bulk 9  Bulk 10  Bulk 11  Bulk 12  Bulk 13  Bulk 14  Bulk 15  \n","0     NaN      NaN      NaN    206.0      NaN    150.0    154.0  \n","1     NaN      NaN      NaN    206.0      NaN    149.0    154.0  \n","2     NaN      NaN      NaN    205.0      NaN    152.0    153.0  \n","3     NaN      NaN      NaN    207.0      NaN    153.0    154.0  \n","4     NaN      NaN      NaN    203.0      NaN    151.0    152.0  \n","==================================================\n","               key      Bulk 1      Bulk 2       Bulk 3       Bulk 4  \\\n","count  3129.000000  252.000000   22.000000  1298.000000  1014.000000   \n","mean   1624.383509   39.242063  253.045455   113.879045   104.394477   \n","std     933.337642   18.277654   21.180578    75.483494    48.184126   \n","min       1.000000   10.000000  228.000000     6.000000    12.000000   \n","25%     816.000000   27.000000  242.000000    58.000000    72.000000   \n","50%    1622.000000   31.000000  251.500000    97.500000   102.000000   \n","75%    2431.000000   46.000000  257.750000   152.000000   133.000000   \n","max    3241.000000  185.000000  325.000000   454.000000   281.000000   \n","\n","           Bulk 5      Bulk 6      Bulk 7  Bulk 8      Bulk 9     Bulk 10  \\\n","count   77.000000  576.000000   25.000000     1.0   19.000000  176.000000   \n","mean   107.025974  118.925347  305.600000    49.0   76.315789   83.284091   \n","std     81.790646   72.057776  191.022904     NaN   21.720581   26.060347   \n","min     11.000000   17.000000   47.000000    49.0   63.000000   24.000000   \n","25%     70.000000   69.750000  155.000000    49.0   66.000000   64.000000   \n","50%     86.000000  100.000000  298.000000    49.0   68.000000   86.500000   \n","75%    132.000000  157.000000  406.000000    49.0   70.500000  102.000000   \n","max    603.000000  503.000000  772.000000    49.0  147.000000  159.000000   \n","\n","          Bulk 11      Bulk 12     Bulk 13      Bulk 14      Bulk 15  \n","count  177.000000  2450.000000   18.000000  2806.000000  2248.000000  \n","mean    76.819209   260.471020  181.111111   170.284747   160.513345  \n","std     59.655365   120.649269   46.088009    65.868652    51.765319  \n","min      8.000000    53.000000  151.000000    16.000000     1.000000  \n","25%     25.000000   204.000000  153.250000   119.000000   105.000000  \n","50%     64.000000   208.000000  155.500000   151.000000   160.000000  \n","75%    106.000000   316.000000  203.500000   205.750000   205.000000  \n","max    313.000000  1849.000000  305.000000   636.000000   405.000000  \n","==================================================\n","Колличество пропусков в каждом столбце\n","key           0\n","Bulk 1     2877\n","Bulk 2     3107\n","Bulk 3     1831\n","Bulk 4     2115\n","Bulk 5     3052\n","Bulk 6     2553\n","Bulk 7     3104\n","Bulk 8     3128\n","Bulk 9     3110\n","Bulk 10    2953\n","Bulk 11    2952\n","Bulk 12     679\n","Bulk 13    3111\n","Bulk 14     323\n","Bulk 15     881\n","dtype: int64\n","==================================================\n","Колличество дублей\n","0\n"]}]},{"cell_type":"markdown","source":["Много пропусков и не ясно что за bulk.\n"],"metadata":{"id":"qi0d62Flu7FF"}},{"cell_type":"code","source":["print(data_bulk_time_new.info())\n","print(50*'=')\n","print(data_bulk_time_new.head())\n","print(50*'=')\n","print(data_bulk_time_new.describe())\n","print(50*'=')\n","print('Колличество пропусков в каждом столбце')\n","print(data_bulk_time_new.isna().sum())\n","print(50*'=')\n","print('Колличество дублей')\n","print(data_bulk_time_new.duplicated().sum())\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cStmPfEJu-21","executionInfo":{"status":"ok","timestamp":1693219431730,"user_tz":-300,"elapsed":437,"user":{"displayName":"Иван","userId":"01650192778822130219"}},"outputId":"f9e6d463-ae61-44e0-a216-f59475511e5e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3129 entries, 0 to 3128\n","Data columns (total 16 columns):\n"," #   Column   Non-Null Count  Dtype \n","---  ------   --------------  ----- \n"," 0   key      3129 non-null   int64 \n"," 1   Bulk 1   252 non-null    object\n"," 2   Bulk 2   22 non-null     object\n"," 3   Bulk 3   1298 non-null   object\n"," 4   Bulk 4   1014 non-null   object\n"," 5   Bulk 5   77 non-null     object\n"," 6   Bulk 6   576 non-null    object\n"," 7   Bulk 7   25 non-null     object\n"," 8   Bulk 8   1 non-null      object\n"," 9   Bulk 9   19 non-null     object\n"," 10  Bulk 10  176 non-null    object\n"," 11  Bulk 11  177 non-null    object\n"," 12  Bulk 12  2450 non-null   object\n"," 13  Bulk 13  18 non-null     object\n"," 14  Bulk 14  2806 non-null   object\n"," 15  Bulk 15  2248 non-null   object\n","dtypes: int64(1), object(15)\n","memory usage: 391.2+ KB\n","None\n","==================================================\n","   key Bulk 1 Bulk 2 Bulk 3               Bulk 4 Bulk 5 Bulk 6 Bulk 7 Bulk 8  \\\n","0    1    NaN    NaN    NaN  2019-05-03 11:28:48    NaN    NaN    NaN    NaN   \n","1    2    NaN    NaN    NaN  2019-05-03 11:36:50    NaN    NaN    NaN    NaN   \n","2    3    NaN    NaN    NaN  2019-05-03 12:32:39    NaN    NaN    NaN    NaN   \n","3    4    NaN    NaN    NaN  2019-05-03 12:43:22    NaN    NaN    NaN    NaN   \n","4    5    NaN    NaN    NaN  2019-05-03 13:30:47    NaN    NaN    NaN    NaN   \n","\n","  Bulk 9 Bulk 10 Bulk 11              Bulk 12 Bulk 13              Bulk 14  \\\n","0    NaN     NaN     NaN  2019-05-03 11:24:31     NaN  2019-05-03 11:14:50   \n","1    NaN     NaN     NaN  2019-05-03 11:53:30     NaN  2019-05-03 11:48:37   \n","2    NaN     NaN     NaN  2019-05-03 12:27:13     NaN  2019-05-03 12:21:01   \n","3    NaN     NaN     NaN  2019-05-03 12:58:00     NaN  2019-05-03 12:51:11   \n","4    NaN     NaN     NaN  2019-05-03 13:30:47     NaN  2019-05-03 13:34:12   \n","\n","               Bulk 15  \n","0  2019-05-03 11:10:43  \n","1  2019-05-03 11:44:39  \n","2  2019-05-03 12:16:16  \n","3  2019-05-03 12:46:36  \n","4  2019-05-03 13:30:47  \n","==================================================\n","               key\n","count  3129.000000\n","mean   1624.383509\n","std     933.337642\n","min       1.000000\n","25%     816.000000\n","50%    1622.000000\n","75%    2431.000000\n","max    3241.000000\n","==================================================\n","Колличество пропусков в каждом столбце\n","key           0\n","Bulk 1     2877\n","Bulk 2     3107\n","Bulk 3     1831\n","Bulk 4     2115\n","Bulk 5     3052\n","Bulk 6     2553\n","Bulk 7     3104\n","Bulk 8     3128\n","Bulk 9     3110\n","Bulk 10    2953\n","Bulk 11    2952\n","Bulk 12     679\n","Bulk 13    3111\n","Bulk 14     323\n","Bulk 15     881\n","dtype: int64\n","==================================================\n","Колличество дублей\n","0\n"]}]},{"cell_type":"markdown","source":["Пропусков достаточно много"],"metadata":{"id":"Kt0bb-jlvqtO"}},{"cell_type":"code","source":["print(data_gas_new.info())\n","print(50*'=')\n","print(data_gas_new.head())\n","print(50*'=')\n","print(data_gas_new.describe())\n","print(50*'=')\n","print('Колличество пропусков в каждом столбце')\n","print(data_gas_new.isna().sum())\n","print(50*'=')\n","print('Колличество дублей')\n","print(data_gas_new.duplicated().sum())\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iR7f7jXmvrRl","executionInfo":{"status":"ok","timestamp":1693219579344,"user_tz":-300,"elapsed":408,"user":{"displayName":"Иван","userId":"01650192778822130219"}},"outputId":"91527331-ee04-474b-ce9c-a3bf071ddad9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3239 entries, 0 to 3238\n","Data columns (total 2 columns):\n"," #   Column  Non-Null Count  Dtype  \n","---  ------  --------------  -----  \n"," 0   key     3239 non-null   int64  \n"," 1   Газ 1   3239 non-null   float64\n","dtypes: float64(1), int64(1)\n","memory usage: 50.7 KB\n","None\n","==================================================\n","   key      Газ 1\n","0    1  29.749986\n","1    2  12.555561\n","2    3  28.554793\n","3    4  18.841219\n","4    5   5.413692\n","==================================================\n","               key        Газ 1\n","count  3239.000000  3239.000000\n","mean   1621.861377    11.002062\n","std     935.386334     6.220327\n","min       1.000000     0.008399\n","25%     812.500000     7.043089\n","50%    1622.000000     9.836267\n","75%    2431.500000    13.769915\n","max    3241.000000    77.995040\n","==================================================\n","Колличество пропусков в каждом столбце\n","key      0\n","Газ 1    0\n","dtype: int64\n","==================================================\n","Колличество дублей\n","0\n"]}]},{"cell_type":"markdown","source":["**ПОДвывод\n","**"],"metadata":{"id":"zujzJjNdwMzd"}},{"cell_type":"code","source":["print(data_temp_new.info())\n","print(50*'=')\n","print(data_temp_new.head())\n","print(50*'=')\n","print(data_temp_new.describe())\n","print(50*'=')\n","print('Колличество пропусков в каждом столбце')\n","print(data_temp_new.isna().sum())\n","print(50*'=')\n","print('Колличество дублей')\n","print(data_temp_new.duplicated().sum())\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ezrF6qUtwMLH","executionInfo":{"status":"ok","timestamp":1693219649528,"user_tz":-300,"elapsed":421,"user":{"displayName":"Иван","userId":"01650192778822130219"}},"outputId":"fe4f94fd-dd6e-4bcf-bd16-1819e6ae91a7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 18092 entries, 0 to 18091\n","Data columns (total 3 columns):\n"," #   Column        Non-Null Count  Dtype  \n","---  ------        --------------  -----  \n"," 0   key           18092 non-null  int64  \n"," 1   Время замера  18092 non-null  object \n"," 2   Температура   14665 non-null  float64\n","dtypes: float64(1), int64(1), object(1)\n","memory usage: 424.2+ KB\n","None\n","==================================================\n","   key         Время замера  Температура\n","0    1  2019-05-03 11:02:04       1571.0\n","1    1  2019-05-03 11:07:18       1604.0\n","2    1  2019-05-03 11:11:34       1618.0\n","3    1  2019-05-03 11:18:04       1601.0\n","4    1  2019-05-03 11:25:59       1606.0\n","==================================================\n","                key   Температура\n","count  18092.000000  14665.000000\n","mean    1616.460977   1590.722741\n","std      934.641385     20.394381\n","min        1.000000   1191.000000\n","25%      807.750000   1580.000000\n","50%     1618.000000   1590.000000\n","75%     2429.000000   1599.000000\n","max     3241.000000   1705.000000\n","==================================================\n","Колличество пропусков в каждом столбце\n","key                0\n","Время замера       0\n","Температура     3427\n","dtype: int64\n","==================================================\n","Колличество дублей\n","0\n"]}]},{"cell_type":"markdown","source":["Подвывод"],"metadata":{"id":"MxoH0vE1wLzR"}},{"cell_type":"code","source":["print(data_wire_new.info())\n","print(50*'=')\n","print(data_wire_new.head())\n","print(50*'=')\n","print(data_wire_new.describe())\n","print(50*'=')\n","print('Колличество пропусков в каждом столбце')\n","print(data_wire_new.isna().sum())\n","print(50*'=')\n","print('Колличество дублей')\n","print(data_wire_new.duplicated().sum())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ulKswiN0wiJv","executionInfo":{"status":"ok","timestamp":1693220873491,"user_tz":-300,"elapsed":488,"user":{"displayName":"Иван","userId":"01650192778822130219"}},"outputId":"6e7e5d4b-b5c1-4534-bebf-4ec74f7b10d6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3081 entries, 0 to 3080\n","Data columns (total 10 columns):\n"," #   Column  Non-Null Count  Dtype  \n","---  ------  --------------  -----  \n"," 0   key     3081 non-null   int64  \n"," 1   Wire 1  3055 non-null   float64\n"," 2   Wire 2  1079 non-null   float64\n"," 3   Wire 3  63 non-null     float64\n"," 4   Wire 4  14 non-null     float64\n"," 5   Wire 5  1 non-null      float64\n"," 6   Wire 6  73 non-null     float64\n"," 7   Wire 7  11 non-null     float64\n"," 8   Wire 8  19 non-null     float64\n"," 9   Wire 9  29 non-null     float64\n","dtypes: float64(9), int64(1)\n","memory usage: 240.8 KB\n","None\n","==================================================\n","   key     Wire 1   Wire 2  Wire 3  Wire 4  Wire 5  Wire 6  Wire 7  Wire 8  \\\n","0    1  60.059998      NaN     NaN     NaN     NaN     NaN     NaN     NaN   \n","1    2  96.052315      NaN     NaN     NaN     NaN     NaN     NaN     NaN   \n","2    3  91.160157      NaN     NaN     NaN     NaN     NaN     NaN     NaN   \n","3    4  89.063515      NaN     NaN     NaN     NaN     NaN     NaN     NaN   \n","4    5  89.238236  9.11456     NaN     NaN     NaN     NaN     NaN     NaN   \n","\n","   Wire 9  \n","0     NaN  \n","1     NaN  \n","2     NaN  \n","3     NaN  \n","4     NaN  \n","==================================================\n","               key       Wire 1       Wire 2      Wire 3      Wire 4  Wire 5  \\\n","count  3081.000000  3055.000000  1079.000000   63.000000   14.000000   1.000   \n","mean   1623.426485   100.895853    50.577323  189.482681   57.442841  15.132   \n","std     932.996726    42.012518    39.320216   99.513444   28.824667     NaN   \n","min       1.000000     1.918800     0.030160    0.144144   24.148801  15.132   \n","25%     823.000000    72.115684    20.193680   95.135044   40.807002  15.132   \n","50%    1619.000000   100.158234    40.142956  235.194977   45.234282  15.132   \n","75%    2434.000000   126.060483    70.227558  276.252014   76.124619  15.132   \n","max    3241.000000   330.314424   282.780152  385.008668  113.231044  15.132   \n","\n","           Wire 6     Wire 7      Wire 8     Wire 9  \n","count   73.000000  11.000000   19.000000  29.000000  \n","mean    48.016974  10.039007   53.625193  34.155752  \n","std     33.919845   8.610584   16.881728  19.931616  \n","min      0.034320   0.234208   45.076721   4.622800  \n","25%     25.053600   6.762756   46.094879  22.058401  \n","50%     42.076324   9.017009   46.279999  30.066399  \n","75%     64.212723  11.886057   48.089603  43.862003  \n","max    180.454575  32.847674  102.762401  90.053604  \n","==================================================\n","Колличество пропусков в каждом столбце\n","key          0\n","Wire 1      26\n","Wire 2    2002\n","Wire 3    3018\n","Wire 4    3067\n","Wire 5    3080\n","Wire 6    3008\n","Wire 7    3070\n","Wire 8    3062\n","Wire 9    3052\n","dtype: int64\n","==================================================\n","Колличество дублей\n","0\n"]}]},{"cell_type":"markdown","source":[],"metadata":{"id":"gmPI2Y2j1Dra"}},{"cell_type":"code","source":["print(data_wire_time_new.info())\n","print(50*'=')\n","print(data_wire_time_new.head())\n","print(50*'=')\n","print(data_wire_time_new.describe())\n","print(50*'=')\n","print('Колличество пропусков в каждом столбце')\n","print(data_wire_time_new.isna().sum())\n","print(50*'=')\n","print('Колличество дублей')\n","print(data_wire_time_new.duplicated().sum())\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rSeIhFOe1FS3","executionInfo":{"status":"ok","timestamp":1693220928121,"user_tz":-300,"elapsed":411,"user":{"displayName":"Иван","userId":"01650192778822130219"}},"outputId":"c4c68275-037a-4fd8-dd41-e16627dece7f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3081 entries, 0 to 3080\n","Data columns (total 10 columns):\n"," #   Column  Non-Null Count  Dtype \n","---  ------  --------------  ----- \n"," 0   key     3081 non-null   int64 \n"," 1   Wire 1  3055 non-null   object\n"," 2   Wire 2  1079 non-null   object\n"," 3   Wire 3  63 non-null     object\n"," 4   Wire 4  14 non-null     object\n"," 5   Wire 5  1 non-null      object\n"," 6   Wire 6  73 non-null     object\n"," 7   Wire 7  11 non-null     object\n"," 8   Wire 8  19 non-null     object\n"," 9   Wire 9  29 non-null     object\n","dtypes: int64(1), object(9)\n","memory usage: 240.8+ KB\n","None\n","==================================================\n","   key               Wire 1               Wire 2 Wire 3 Wire 4 Wire 5 Wire 6  \\\n","0    1  2019-05-03 11:06:19                  NaN    NaN    NaN    NaN    NaN   \n","1    2  2019-05-03 11:36:50                  NaN    NaN    NaN    NaN    NaN   \n","2    3  2019-05-03 12:11:46                  NaN    NaN    NaN    NaN    NaN   \n","3    4  2019-05-03 12:43:22                  NaN    NaN    NaN    NaN    NaN   \n","4    5  2019-05-03 13:20:44  2019-05-03 13:15:34    NaN    NaN    NaN    NaN   \n","\n","  Wire 7 Wire 8 Wire 9  \n","0    NaN    NaN    NaN  \n","1    NaN    NaN    NaN  \n","2    NaN    NaN    NaN  \n","3    NaN    NaN    NaN  \n","4    NaN    NaN    NaN  \n","==================================================\n","               key\n","count  3081.000000\n","mean   1623.426485\n","std     932.996726\n","min       1.000000\n","25%     823.000000\n","50%    1619.000000\n","75%    2434.000000\n","max    3241.000000\n","==================================================\n","Колличество пропусков в каждом столбце\n","key          0\n","Wire 1      26\n","Wire 2    2002\n","Wire 3    3018\n","Wire 4    3067\n","Wire 5    3080\n","Wire 6    3008\n","Wire 7    3070\n","Wire 8    3062\n","Wire 9    3052\n","dtype: int64\n","==================================================\n","Колличество дублей\n","0\n"]}]},{"cell_type":"markdown","source":["Посмотрим распределение"],"metadata":{"id":"9bga4iM9DA9T"}},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","plt.figure(figsize=(10,6))\n","plt.hist(data_arc_new['Реактивная мощность'])\n","plt.title('Распределение признака example_column')\n","plt.xlabel('Значение')\n","plt.ylabel('Частота')\n","plt.grid(True)\n","plt.show()\n"],"metadata":{"id":"ddlCWGVB1PWs","colab":{"base_uri":"https://localhost:8080/","height":564},"executionInfo":{"status":"ok","timestamp":1693308557662,"user_tz":-300,"elapsed":992,"user":{"displayName":"Иван","userId":"01650192778822130219"}},"outputId":"9e8f9561-e5f3-4241-a5b5-f8f3b39d0df4"},"execution_count":11,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"rwvK2kL5DERd"},"execution_count":null,"outputs":[]}]}